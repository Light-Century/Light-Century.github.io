[{"title":"My start","date":"2022-10-07T16:27:17.000Z","url":"/2022/10/08/My-story/","tags":[["闲话","/tags/%E9%97%B2%E8%AF%9D/"]],"categories":[["闲话","/categories/%E9%97%B2%E8%AF%9D/"]],"content":"Hello,World! 以后会经常写blog的！"},{"title":"翻车记录","date":"2022-09-02T05:01:35.000Z","url":"/2022/09/02/%E7%BF%BB%E8%BD%A6%E8%AE%B0%E5%BD%95/","tags":[["算法笔记","/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"]],"categories":[["算法学习笔记","/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"]],"content":"2022.9.2 P8469 若取两数列比较，一数列严格不大于另一数列，求一数列整体gcd最大，则\\(gcd(a_1,a_2,...,a_n)_{max}=\\min {a_i}\\) 以及在int中 \\(2^{30}&gt; 0x7fffff\\) ,同时组合计数时不必进行排序，使用$ $累乘计数即可。 P1259 递归分治思路重点在于逐级利用相同的方式去处理问题，及n=k的情况可逐渐递归至初始状态再递归到本状态 检验答案时，首先注意行数，以及答案的输出要稳定且准确，对于输出debug时注意避免重复，有序地进行数据的输出。 2022.9.18 P3612 保持顺序递推是十分简单的。 与对偶复制不同的，顺序复制下当前位置的元素并非严格以\\(\\frac{1}{2}sum\\)进行分界，可能位于序列的左端，因此查询时不可一次完成，需循环缩短范围。 对于特殊情况要认真考虑，不可以散漫态度理解问题。 在题中没有强调且提示数据范围时，一定要注意数据范围，三年OI一场空，不开long long见祖宗。 2022.9.22 P1080 贪心规律推导 高精乘小int时需注意不要立刻更新，避免原有数据被覆盖 "},{"title":"luogu P2651 【添加括号III】","date":"2020-04-26T05:03:05.000Z","url":"/2020/04/26/luogu-P2651-%E3%80%90%E6%B7%BB%E5%8A%A0%E6%8B%AC%E5%8F%B7III%E3%80%91/","tags":[["算法笔记","/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"],["题解","/tags/%E9%A2%98%E8%A7%A3/"],["luogu","/tags/luogu/"]],"categories":[["题解","/categories/%E9%A2%98%E8%A7%A3/"]],"content":"看题解区几乎都是gcd的做法,那我来写一发取模运算吧... 不难想到，分母数量越少，越可能被整除，仔细观察可发现，当分式为 \\(\\frac{a_1}{(\\frac{a_2}{\\frac{a_3}{...}})}\\),可以化简为\\(\\frac{a_1a_3a_4...}{a_2}\\),即只要其他的数可以被\\(a_2\\)整除即可。 我们对此进行边算边取模，当分子 mod 分母=0时即可以化为整数。 套用公式\\(a*b%mod=(a%mod)*b%mod\\),不难写出本题代码。 需要注意的一点是，在n=1时，因为没有分母，所以直接可以输出Yes。 Code: "},{"title":"关于杨辉三角的空间优化","date":"2020-03-15T15:37:35.000Z","url":"/2020/03/15/%E5%85%B3%E4%BA%8E%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92%E7%9A%84%E7%A9%BA%E9%97%B4%E4%BC%98%E5%8C%96/","tags":[["算法笔记","/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"]],"categories":[["算法学习笔记","/categories/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"]],"content":"杨辉三角空间优化 对于一般二维做法，相信大家已经非常清楚了。本文主要讨论关于杨辉三角的空间优化。 在这里放一下杨辉三角的递推式：f[i][j]=f[i-1][j-1]+f[i-1][j]。 根据递推式，不难想到，每个位置的值只与上一行的当前位置和前一个位置有关，即f[i][j]=f[i-1][j-1]+f[i-1][j]。 显然地，当前位置的值只受上一行影响，即前面的值我们并不需要进行保存，这时我们可以借用滚动数组的思想进行空间优化，从数组尾端进行更新，尾端的值便等于上一次的值加上前一位的值，即f[i]=f[i-1]+f[i]，此时，我们就将空间复杂度优化到了O(n)。 注意： 在数组滚动的时候，我们需要倒序地进行更新，因为每一个数只与前一个数和当前位置有关，而与后面的数无关。 正序更新会导致重复更新，而倒序更新时前面存放的都是上一行的数据，此时更新是完全符合递推式的，所以我们采用倒序的方式进行更新数组。 Code: "},{"title":"luogu P5719 【【深基4.例3】分类平均】","date":"2020-02-26T13:33:19.000Z","url":"/2020/02/26/luogu-P5719-%E3%80%90%E3%80%90%E6%B7%B1%E5%9F%BA4-%E4%BE%8B3%E3%80%91%E5%88%86%E7%B1%BB%E5%B9%B3%E5%9D%87%E3%80%91/","tags":[["算法笔记","/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"],["题解","/tags/%E9%A2%98%E8%A7%A3/"],["luogu","/tags/luogu/"]],"categories":[["题解","/categories/%E9%A2%98%E8%A7%A3/"]],"content":"复杂度可以做到O(1).. 不难发现题目的几个性质 A类+B类 的和 =\\(\\sum_{i=1}^{n} i\\) 一个数不是A类就是B类 A类数的第一个必然为k A类数由1k,2k+....+floor(\\(\\frac{n}{k}\\))k组成 由此，我们可以发现通过第四条，我们可以提取k，使其变为k(1+2+....+floor(\\(\\frac{n}{k})\\))。 通过公式变换可得A类数的个数为floor(\\(\\frac{n}{k}\\)),而A类数的和为\\(\\frac{k(\\frac{n}{k})(\\frac{n}{k+1})}{2}\\)。 简单数学推理可得，B类数的总和就是1-n的和减去A类数的和，即为\\(\\frac{n(n+1)}{2}\\)-k\\(\\frac{(\\frac{n}{k})(\\frac{n}{k+1})}{2}\\)，同时，B类个数为n-floor(\\(\\frac{n}{k}\\))。 有了这些性质，我们便能轻松的AC了。 注意：k可能为0，A类数的个数可能为0或n，此处我们需要特判一下 Code: "},{"title":"My_Back_Pages","date":"2020-02-14T11:02:36.000Z","url":"/2020/02/14/My-Back-Pages/","tags":[["Memory","/tags/Memory/"]],"categories":[["Memory","/categories/Memory/"]],"content":"2017暑假 由于lcyz当年的信息营人员过少，于是来到了我们初中来拉人学习OI...就此入坑.. 2017.9月 暑假的OI培训考试成绩汇总出来了，蒟蒻AK掉了所有比赛成为了rk1..因为题目过水，还有原题鱼目混珠，同时因为暑假搞OI荒废了暑假作业，被年级主任请去喝茶..是真的请我喝茶了，但也由于拿到了rk1被年级组评了个乱七八糟的奖于是我大头照挂放在学校门口的过道上，某些同学趁着某次放假拍照说要拿回去辟邪 2017-2018.6月 全是在水..由于当时缺乏经验，跟着也是第一次带信奥的老师的进度走下去，因为进度过慢学的很少..2018.6月的时候才刚刚学到结构体...各位神犇初学的一年都能吊打我100条街.. 2018.7月 有幸去参加了夏令营，可由于水平过菜只听懂了day1和day4的内容..这时也是第一次接触到OJ..从此开始刷题之路，水平渐长。然而依旧很菜 2018.谔（&lt;10）月谔日 升到大犇，紧接着洛谷改为咕值模式... 2018.谔（&lt;10）月谔日 红名祭，同时开始晚自习停课去机房集训 2018.10 逃脱期中考试，借着十一假期去qbxt培训，以极其顽强的精神吃了4天的方便面吃的胃疼,达成了去掉住宿费7天只花了56块钱的极限生存成就，最后一天模拟考试时由于水平过菜，T2细节没注意导致挂分..只拿到了rk6...没想到rk6还有奖品,虽然是并夕夕上的山寨货 2018.11 NOIP2018，T2由于中间变量没开long long挂了40pts..与一等失之交臂..我还是太菜了.. 咕咕咕 2020.2.14 第一次不借助任何帮助A掉一道蓝题 我太菜了 2020.2.23 蓝题数量进入两位数 2020.3.16 得到了rqy姐姐的指点受宠若惊"},{"title":"luogu P5736 【【深基7.例2】质数筛】","date":"2020-02-05T09:39:37.000Z","url":"/2020/02/05/luogu-P5736-%E3%80%90%E3%80%90%E6%B7%B1%E5%9F%BA7-%E4%BE%8B2%E3%80%91%E8%B4%A8%E6%95%B0%E7%AD%9B%E3%80%91/","tags":[["算法笔记","/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"],["题解","/tags/%E9%A2%98%E8%A7%A3/"],["luogu","/tags/luogu/"]],"categories":[["题解","/categories/%E9%A2%98%E8%A7%A3/"]],"content":"看见题解区没有用Miller-Rabin，所以我来了 这道题不需要打素数表，只要直接判断输出即可。 算法介绍：Miller-Rabin Miller-Rabin算法是一种随机化的算法，可以大概率的检测出一个数是合数还是质数，它依赖于费马小定理和二次探测两个理论，若测试次数为a，则该算法出错几率为4^(-a)不会证（逃。两个理论的相关证明（引用于CSDN） 根据费马小定理，如果 p 为质数且 a 与 p 互质，那么有a^(p−1)≡1(mod p),我们随机出一个a，用快速幂得到a^(p−1)%p，若结果为1，则再次测试，若结果不为1，则p一定为合数，结束测试，通常，只需随机出10个值便可基本测出是否为质数。 Code: "},{"title":"luogu P6015 【[CSGRound3]游戏】","date":"2020-01-29T10:20:30.000Z","url":"/2020/01/29/luogu-P6015-%E3%80%90-CSGRound3-%E6%B8%B8%E6%88%8F%E3%80%91/","tags":[["算法笔记","/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"],["题解","/tags/%E9%A2%98%E8%A7%A3/"],["luogu","/tags/luogu/"]],"categories":[["题解","/categories/%E9%A2%98%E8%A7%A3/"]],"content":"双指针做法 坑点:贪心是错误的。 举例 5 1 3 3 ，k=6,可以发现，按贪心来取，X=6时，前缀和最大可以取到（5+1）6，而后面也可以取到( 3+3）6，而第一段只取5时，第二段最大只能取到4，所以此时有必胜策略，故贪心是错误的，我们需要逐个枚举第一段取到的纸牌数。 由于每次两个人取到的纸牌的末尾下表都是不下降的，也就是说，通过双指针进行扫描可以有一个很优的复杂度不会分析。我们可以对于第一段取的纸牌数逐个枚举，而对于第二段就可以直接向后扫描取最大值了。 Code： "},{"title":"CF918A 【Eleven】","date":"2020-01-21T04:12:23.000Z","url":"/2020/01/21/CF918A-%E3%80%90Eleven%E3%80%91/","tags":[["算法笔记","/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"],["Codeforces","/tags/Codeforces/"],["题解","/tags/%E9%A2%98%E8%A7%A3/"]],"categories":[["题解","/categories/%E9%A2%98%E8%A7%A3/"]],"content":"一看这道题没有用字符串的，我就知道我的机会来了 由题意，我们要在斐波那契数列的数位上输出\"O\", 其它的位置输出\"o\" ，那么我们可以用一个now来存放当且斐波那契数列的未被走过的位置，若当前走的位置不等于斐波那契数列第一位未走过的，就输出\"o\"，若等于，则输出\"O\",再令now++。 注意：now是从2开始的，因为f[1]=f[2]=1，为了避免重复，所以这里从2开始. 放一下递推式： f[n]=f[n-1]+f[n-2] 由于第20位左右的斐波那契数已超过1000，递推只需进行到20位就可以了 懒得算具体位数。 据此，我们可以得出一份代码: Code: 正解到这里就结束了。 下面是歪解 这道题都没有人使用字符串，所以...--&gt;打表! (上面的正解稍微改改就能打表了 string大法好 函数介绍:string的substr 调用string需要使用#include 废话 用法： 由题意，任何长度的答案都是从n=1000的答案里面截取的，所以我们只需要把n=1000的答案打出来，再利用substr对于前n位进行截取，直接输出便为答案了。 Code: 再水红题就没脸见人了"},{"title":"luogu P5887 【Ringed Genesis】","date":"2020-01-01T10:46:37.000Z","url":"/2020/01/01/luogu-P5887-%E3%80%90Ringed-Genesis%E3%80%91/","tags":[["算法笔记","/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"],["题解","/tags/%E9%A2%98%E8%A7%A3/"],["luogu","/tags/luogu/"]],"categories":[["题解","/categories/%E9%A2%98%E8%A7%A3/"]],"content":"（大概是去世的NOIP.PJ T1难度 由题意可知，兔子爬过的格子是一个环，移动方式是（当前位置+k）%n。 由此可见每一只兔子的移动方式都是同样的，所以当一只兔子跳到一个曾经跳过的位置，便意味着接下来的位置也都被之前跳跃过了。 。 所以我们可以口胡发现，当移动到的位置被经过时，就不需往下进行下去了。 在这里，我们用一个bool数组进行标记是否走过该位置，设定一个总数ans=n,每走过一个没有经过的格子，ans--，最后的结果自然便是不可能走过的格子数。 Code： 口胡完成！"},{"title":"CSP-2019-S-day1-T1","date":"2019-12-01T07:53:26.000Z","url":"/2019/12/01/CSP-2019-S-day1-T1/","tags":[["算法笔记","/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"],["题解","/tags/%E9%A2%98%E8%A7%A3/"],["CSP-2019-S","/tags/CSP-2019-S/"]],"categories":[["题解","/categories/%E9%A2%98%E8%A7%A3/"]],"content":"这道题大概模拟就可以了... 考场上做的时候差点以为它让我写一种格雷码生成方式 吓坏我了 根据题意，2n的序列显然是由2(n-1)的序列('0'+正序)+('1'+倒序)生成的 由此可知(字母含义详见题面)： 若k&lt;=2^(n-1)-1，开头一定为0，此时位置直接为上一次序列中的位置 反之,若k&gt;2^(n-1)-1，开头则为1，此时位置为上一次序列中的位置(n&lt;&lt;1)-k-1 (读者自证不难 据此可进行模拟 然而我还是因为没开cstdio挂掉了.. 关于unsigned long long 查了一下，貌似unsigned溢出后好像再运算，只要数值回到unsigned long long，好像可以正常输出?.."},{"title":"CSP 2019 Memory","date":"2019-11-23T10:36:40.000Z","url":"/2019/11/23/CSP-2019-Memory/","tags":[["Memory","/tags/Memory/"]],"categories":[["Memory","/categories/Memory/"]],"content":"既然题名为回忆，自然是赛后写的 本来打算d2晚上就写，奈何我实在是太懒了。 谨此纪念我的OI生涯 2019.11.23 今年爆炸，发了程序去洛谷和牛客上测分，测得今年省二大概是稳了，距离省一估计还要差上20分左右..测完分后原本心情还算不错，但偶然点开了群中的成绩自测，一看到自己的分数，如晴天霹雳一般..我的d1t1群中的分数是0，我当场就懵了，以为是评测的问题，但还是略有些不放心，便找来自己的源程序一看——d1t1头文件忘记打cstdio了..今年大概只能拿省三了..心情顿时抑郁起来，省三是什么概念..那意味着今年我只拿了一个参与奖罢了，感觉这几天的努力全部白费了.. 真是对不起一起学习的同学和教练.. 感觉自己真的是快要AFO了.. 只能在这安慰着自己，今年我才高一，我还有两年的机会 但愿下次不会再犯同样的错误吧.. day -1 今年终于把假请下来了..虽然就请了三个小时 信息课上被教练抓去写题.. 今天打了打板子，临考前还是巩固一下自己所学的知识点为好，新算法现在学也起不到多大的作用 虽然我一共也没学多少算法 晚上一直写到1点半（因为明天在车上可以睡觉 总之，今天便这样了，很快，我就要上战场了 day 0 今天一早就去教室里拿了本《品三国》,本来是打算在路上看的，奈何实在是太困了..睡了几个小时，起来又颓废一会儿，大概七个小时便到了.. 今年特地把笔记本带了过来，事实证明这个决定也是挺正确的.. (至少在宿舍有啥问题和想法可以直接去验证.. 晚上试机时，感觉考场电脑要比lcyz机房电脑好上几倍 (我校电脑不是鼠标失灵就是键盘失灵.. 晚上，抱着期待的心情，睡着了. day 1 起来一早去洛谷打卡，给了我一个中吉 (kkk说不是都大吉吗..就我一个中吉吗.. ,事实证明，d1的确挺倒霉的,d1t1直接忘写cstdio，于是100--&gt;0，我太惨了，早上6点便起了，看了看板子，跟舍友们互道了声rp++,便去考场了.. 今年的ccf是想办森林公园吗..看了看d1的题，三道题,三棵树.. 看了看，t1t2都是可做的，大概花了15min推出了t1的规律，看了一下数据范围，k&lt;2^64-1,显然需要unsigned long long,15min成功的将代码实现了出来，测完大样例后随即保存去看了t2，但却没想到t1没有开cstdio，导致整道题都爆了零..t2很快就打完了24分的暴力，想了一个小时的优化都没有想出来..（我还是太菜了..t3随手打了一个根本没分的暴力，便收卷了 下午全宿舍一起颓废 中午回来后，听着一高三的舍友在念叨着，过了今年，自己就要退役了，总感觉有些不舍，诚然，作为一名OIer，谁又不是因为兴趣才来到了这里呢，到了我退役的时候，我也会很伤心吧.. day 2 今天打卡终于大吉了 还是如昨天一般，互道rp++后，便独自去了考场，路上遇到了教练，嘱咐我今天一定要稳住，毕竟我今年才高一，打tg本来便是试试运气的，到了考场，看了看题，发现只有t1可做，但因为我太菜，只能打了一个24pts暴力，想了30min后发现优化不出来，便去t2看了，t2打了一个正确性极差的贪心(民间数据就得了8pts,回过头去优化t1，但苦思冥想却是想不出优化的方法，逐渐的我的心却有些浮躁了，我又想起了教练说的稳住，便沉下心来，终于在最后的20min内优化成功了，我松了口气，拿好东西，走出了考场。 然而我的课本却落在考场里了.. 回去的路上,像往常一样，后排的几位学长又聚在一起k歌，我后面的一位学长突然说道：“好想像以前一样，我才高二，明年，我还可以再来一次”,听到这句话，我心中多了沉重，以后，学校偌大的机房又要空了，再也看不到那些熟悉的身影了..以后培训和比赛完的路上，再也没有人在后排k歌了，想着想着，不免有几分伤感。 今年的比赛算是告一段落了，虽然出现了一次重大失误，但我相信，明年的我，会做到最好. The end."}]